{"version":3,"file":"app/app.bundle.js","mappings":"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","sources":["webpack://graphiql-clientlibs/./src/app/app.clientlibs.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/Actions/CopyUrl.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/Actions/DeleteQueryDialog.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/PersistedQueriesList.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/PersistedQueriesPanel.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/PersistedQueriesUtil.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/PersistedQueryMenu.js","webpack://graphiql-clientlibs/./src/app/components/app.component.js","webpack://graphiql-clientlibs/./src/app/components/graphiql/graphiql.component.js","webpack://graphiql-clientlibs/./src/app/components/publish/publish.component.js","webpack://graphiql-clientlibs/./src/app/components/save/save.component.js","webpack://graphiql-clientlibs/./src/app/utils/CachingGraphQLClient.js","webpack://graphiql-clientlibs/./src/app/utils/componentbase.js","webpack://graphiql-clientlibs/./src/app/utils/componentloader.js","webpack://graphiql-clientlibs/./src/app/utils/constants.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesList.css","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesPanel.css","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesList.css?3bad","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesPanel.css?0ad1"],"sourcesContent":["/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ComponentBase } from \"project.utils/componentbase\";\nimport { AppComponent } from \"./components/app.component\";\nimport { create } from \"project.utils/componentloader\";\n\nexport class GraphiQLApp extends ComponentBase {\n  init() {\n    ReactDOM.render(<AppComponent {...this.config} />, this.el);\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const $root = document.querySelector(\".graphiql-root\");\n  if ($root) {\n    create(GraphiQLApp, $root);\n  }\n});\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport {\n  error as ErrorToast,\n  success as SuccessToast,\n} from \"@react/react-spectrum/Toast\";\nimport { EXECUTE_URL, DEFAULT_TOAST_TIMEOUT } from \"project.utils/constants\";\n\n/**\n *\n * @param queryShortForm the query shortForm (i.e. `/config-name/query-name`)\n * @param queryBody the graphql query\n *\n * Tries to copy the graphql query GET url to the clipboard and show appropriate toast\n *  notification base on result.\n */\nexport const copyUrlToClipboard = async (queryShortForm, queryBody) => {\n  let variables = extractVariablesFromQuery(queryBody);\n  let url = createCopyUrl(queryShortForm, variables);\n  if (navigator && navigator.clipboard && navigator.clipboard.writeText) {\n    await navigator.clipboard.writeText(url);\n    displaySuccessToast(\"Query url copied to clipboard\");\n  } else {\n    displayErrorToast(\"The Clipboard API is not available\");\n  }\n};\n\n/**\n *\n * @param queryBody the graphql query\n *\n * Extract and return a list of semi-colon separated variables to be appended\n *  to the query GET url.\n * Sample Input:\n * `query getArticleByAuthor($name: String!){\n *    articleList(filter: {author: {_expressions: [{value: $name}]}})\n *    {\n *       items {\n *         _path\n *         author\n *         main {\n *            plaintext\n *         }\n *       }\n *    }\n * }`\n * Sample Output: `;name=`\n */\nconst extractVariablesFromQuery = (queryBody) => {\n  let variables = \"\";\n  if (queryBody) {\n    queryBody = queryBody.substring(0, queryBody.indexOf(\"{\"));\n    if (queryBody) {\n      queryBody = queryBody.substring(\n        queryBody.indexOf(\"(\") + 1,\n        queryBody.indexOf(\")\")\n      );\n      if (queryBody) {\n        let params = queryBody.split(\",\");\n        params.forEach((param) => {\n          param = param.substring(param.indexOf(\"$\") + 1, param.indexOf(\":\"));\n          variables += \";\" + param + \"=\";\n        });\n      }\n    }\n  }\n  return variables;\n};\n\n/**\n *\n * @param queryShortForm the query shortForm (i.e. `/config-name/query-name`)\n * @param variables the semi-colon separated variables to be appended\n *  to the query GET url\n *\n * Create the copy/execute url for a query.\n */\nconst createCopyUrl = (queryShortForm, variables) => {\n  let origin = window.location.origin;\n  if (!origin) {\n    origin =\n      window.location.protocol +\n      \"//\" +\n      window.location.hostname +\n      (window.location.port ? \":\" + window.location.port : \"\");\n  }\n  return origin + EXECUTE_URL + queryShortForm + variables;\n};\n\n/**\n *\n * @param successMsg the message to display on success\n *\n * Display a success toast notification\n */\nconst displaySuccessToast = (successMsg) => {\n  SuccessToast(successMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"positive\",\n  });\n};\n\n/**\n *\n * @param errorMsg the message to display on failure\n *\n * Display an error toast notification\n */\nconst displayErrorToast = (errorMsg) => {\n  ErrorToast(errorMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"negative\",\n  });\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  error as ErrorToast,\n  success as SuccessToast,\n} from \"@react/react-spectrum/Toast\";\nimport {\n  AlertDialog,\n  Heading,\n  Text,\n  useDialogContainer,\n  View,\n} from \"@adobe/react-spectrum\";\nimport { PERSIST_URL, DEFAULT_TOAST_TIMEOUT } from \"project.utils/constants\";\n\n/**\n *\n * Render a dialog to confirm the delete operation, on confirmation delete given query.\n */\nexport const DeleteQueryDialog = (props) => {\n  const { queryName, queryShortForm, onDelete = () => void 0 } = props;\n  const dialogContainer = useDialogContainer();\n  const handleDelete = () => {\n    var url = PERSIST_URL + queryShortForm;\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"DELETE\", url, true);\n    xhr.onload = function () {\n      if (xhr.readyState == 4 && xhr.status == \"200\") {\n        displaySuccessToast(`Deleted query: ${queryName}`);\n        onDelete();\n      } else {\n        displayErrorToast(`Failed to delete: ${queryName}`);\n      }\n    };\n    xhr.send(null);\n    dialogContainer.dismiss();\n  };\n\n  const handleCancel = () => {\n    dialogContainer.dismiss();\n  };\n\n  return (\n    <AlertDialog\n      variant=\"destructive\"\n      title=\"Delete Query\"\n      primaryActionLabel=\"Delete\"\n      secondaryActionLabel=\"Cancel\"\n      onPrimaryAction={handleDelete}\n      onSecondaryAction={handleCancel}\n    >\n      <View>\n        <Text>Are you sure you want to delete the persisted query:</Text>\n        <Heading level={3}>{queryName}</Heading>\n      </View>\n    </AlertDialog>\n  );\n};\n\n/**\n *\n * @param successMsg the message to display on success\n *\n * Display a success toast notification\n */\nconst displaySuccessToast = (successMsg) => {\n  SuccessToast(successMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"positive\",\n  });\n};\n\n/**\n *\n * @param errorMsg the message to display on failure\n *\n * Display an error toast notification\n */\nconst displayErrorToast = (errorMsg) => {\n  ErrorToast(errorMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"negative\",\n  });\n};\n\nDeleteQueryDialog.PropTypes = {\n  queryName: PropTypes.string,\n  queryShortForm: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TableView,\n  TableHeader,\n  TableBody,\n  Column,\n  Row,\n  Cell,\n} from \"@adobe/react-spectrum\";\nimport \"./styles/PersistedQueriesList.css\";\nimport Globe from \"@spectrum-icons/workflow/Globe\";\nimport GlobeStrike from \"@spectrum-icons/workflow/GlobeStrike\";\nimport { PersistedQueryMenu } from \"./PersistedQueryMenu\";\n\n/**\n *\n * To render individual persited query items\n */\nexport const PersistedQueriesList = (props) => {\n  const {\n    queryList,\n    queryName,\n    onQuerySelection = () => void 0,\n    onDelete = () => void 0,\n  } = props;\n  return (\n    <TableView\n      aria-label=\"Table showing peristed queries\"\n      selectionMode=\"single\"\n      selectionStyle=\"highlight\"\n      width=\"size-2400\"\n      height=\"100vh\"\n      overflowMode=\"truncate\"\n      // if initial selected query is not null, set it to selected\n      selectedKeys={queryName ? Array.of(queryName) : []}\n      // on selection change call the handleQuerySelection handler with the selected query\n      onSelectionChange={(key) => {\n        onQuerySelection(\n          // find that query object with the selected key\n          queryList.filter((queryObj) => {\n            return queryObj.queryName === key.currentKey;\n          })[0]\n        );\n      }}\n    >\n      <TableHeader>\n        <Column width=\"16%\" hideHeader=\"true\" align=\"center\">\n          Publish Status\n        </Column>\n        <Column width=\"68%\" hideHeader=\"true\">\n          Query Name\n        </Column>\n        <Column width=\"16%\" hideHeader=\"true\" align=\"end\">\n\n          Menu\n        </Column>\n      </TableHeader>\n      <TableBody items={queryList}>\n        {(query) => (\n          <Row key={query.queryName}>\n            <Cell>\n              {query.lastReplicationAction === \"Activate\" && (\n                <Globe aria-label=\"Published\" size=\"S\" />\n              )}\n              {query.lastReplicationAction === \"Deactivate\" && (\n                <GlobeStrike aria-label=\"Unpublished\" size=\"S\" />\n              )}\n            </Cell>\n            <Cell>{query.queryName}</Cell>\n            <Cell>\n              <PersistedQueryMenu query={query} onDelete={onDelete} />\n            </Cell>\n          </Row>\n        )}\n      </TableBody>\n    </TableView>\n  );\n};\n\nPersistedQueriesList.propTypes = {\n  queryList: PropTypes.array,\n  queryName: PropTypes.string,\n  onQuerySelection: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React from \"react\";\nimport {\n  Heading,\n  IllustratedMessage,\n  Content,\n  ProgressCircle,\n  ActionButton,\n  Flex,\n} from \"@adobe/react-spectrum\";\nimport Add from '@spectrum-icons/workflow/Add';\nimport NotFound from \"@spectrum-icons/illustrations/NotFound\";\nimport NoSearchResults from \"@spectrum-icons/illustrations/NoSearchResults\";\nimport PropTypes from \"prop-types\";\nimport { PersistedQueriesList } from \"./PersistedQueriesList\";\nimport { PersistedQueryUtil } from \"./PersistedQueriesUtil\";\nimport \"./styles/PersistedQueriesPanel.css\";\n\n/**\n *\n * @class\n */\nexport class PersistedQueriesPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configName: null,\n      persistedQueries: null,\n      onCreate: this.props.onCreate\n    };\n    this.element = React.createRef();\n  }\n\n  async componentDidUpdate(prevProps) {\n    // Reload the persisted queries list if :\n    // 1. reloadFlag is set true (i.e. panel needs to be updated due to Delete/Save operation)\n    // 2. or the endpoint url has changed\n    if (this.props.reloadFlag != prevProps.reloadFlag || prevProps.url !== this.props.url) {\n      const data = await new PersistedQueryUtil(this.props.url).fetchPersistedQueries();\n      this.setState(data);\n    }\n  }\n\n  async componentDidMount() {\n    // to populate the queries on first component load\n    const data = await new PersistedQueryUtil(this.props.url).fetchPersistedQueries();\n    this.setState(data);\n}\n\n\n  render() {\n    const { configName, persistedQueries } = this.state;\n    // to be shown upon initial loading\n    //(while waiting for the list persisted queries API call response)\n    let content = (\n      <IllustratedMessage id=\"loading\">\n        <ProgressCircle\n          aria-label=\"Loading…\"\n          size=\"M\"\n          isIndeterminate={true}\n          marginTop=\"20px\"\n        />\n      </IllustratedMessage>\n    );\n    // when list of persisted queries are fetched\n    if (persistedQueries) {\n      // to be shown if there are persisted queries under the configuration\n      if (persistedQueries.length > 0) {\n        content = (\n          <div className=\"persisted-queries-list\">\n            <PersistedQueriesList\n              queryList={persistedQueries}\n              queryName={this.props.queryName}\n              onQuerySelection={this.props.onQuerySelection}\n              onDelete={this.props.onDelete}\n            />\n          </div>\n        );\n      } else {\n        // to be shown if there are no persisted queries under the configuration\n        content = (\n          <IllustratedMessage id=\"no-saved-queries\">\n            <NoSearchResults />\n            <Heading>No saved queries</Heading>\n            <Content>Try saving a new query</Content>\n          </IllustratedMessage>\n        );\n      }\n    } else if (configName) {\n      // to be shown if persisted queries is not enabled for the configuration\n      content = (\n        <IllustratedMessage id=\"not-enabled\">\n          <NotFound />\n          <Heading>Not enabled</Heading>\n          <Content>\n            Try enabling Persisted Queries for this configuration\n          </Content>\n        </IllustratedMessage>\n      );\n    }\n    return (\n      <div\n        className=\"persisted-queries-panel\"\n        id=\"persisted-queries-panel\"\n        data-config-name={configName}\n        ref={this.element}\n      >\n        <div className=\"persisted-queries-header\">\n          <div>\n            <Heading level=\"4\">Persisted Queries</Heading>\n          </div>\n            <ActionButton aria-label=\"Create Query\" isQuiet onPress={this.state.onCreate} >\n              <Add />\n            </ActionButton>\n        </div>\n        <Flex direction=\"column\" width=\"100%\" gap=\"size-100\" alignItems=\"center\">\n          {content}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nPersistedQueriesPanel.propTypes = {\n  url: PropTypes.string,\n  queryName: PropTypes.string,\n  reloadFlag: PropTypes.bool,\n  onQuerySelection: PropTypes.func,\n  onDelete: PropTypes.func,\n  onCreate: PropTypes.func\n};\n","import {\n  GET_PERSISTED_QUERIES_URL,\n  CONF_PATH_PREFIX,\n  JCR_PATH_SEPARATOR,\n} from \"project.utils/constants\";\n\nexport class PersistedQueryUtil {\n\n  constructor(url) {\n    this.url = url;\n  }\n\n  async fetchPersistedQueries() {\n    const configName = this.getConfigNameFromUrl(this.url);\n    return await this.getPersistedQueries(configName);\n  }\n\n  /**\n   *\n   * @param url the endpoint url\n   *\n   * Extract and return the config name from the provided url.\n   */\n  getConfigNameFromUrl(url) {\n    // url is of the form : /content/cq:graphql/config-name/endpoint.json\n    return url ? url.split(\"cq:graphql/\")[1].split(\"/endpoint.json\")[0] : \"\";\n  }\n\n  /**\n   *\n   * @param config the name of the configuration whose queries are to be fetched\n   *\n   * Fetch the list of persisted queries corresponding to a particular configuration\n   * and set the state of the component with the result, so that it is re-rendered.\n   */\n  async getPersistedQueries(config) {\n    const queryData = await this.fetchPersistedQueriesData(config);\n    // if persisted query data was fetched\n    if (queryData) {\n      const queries = this.getQueriesFromData(queryData);\n      return {\n        persistedQueries: queries,\n        configName: config,\n      };\n    } else {\n      return {\n        persistedQueries: null,\n        configName: config,\n      };\n    }\n  }\n\n  /**\n   *\n   * @param configName the name of the configuration whose queries are to be fetched\n   *\n   * Helper method which fetched the queries via an AJAX request and returns an array\n   * of persisted query objects.\n   */\n  async fetchPersistedQueriesData(configName) {\n    const response = await fetch(\n      GET_PERSISTED_QUERIES_URL + JCR_PATH_SEPARATOR + configName\n    );\n    if (!response.ok) {\n      // for 404 error (if persisted query is not enabled for a configuration)\n      if (response.status === 404) {\n        return null;\n      } else {\n        const message = `An error has occured while fetching persisted queries for configuration \"${configName}\" : ${response.status}`;\n        throw new Error(message);\n      }\n    }\n    const queryData = await response.json();\n    return queryData;\n  }\n\n  /**\n   *\n   * @param queryData an array of JSON objects (respresenting the persisted queries)\n   *\n   * Helper method parses the given data, and creates an array of objects with the\n   * required properties.\n   */\n  getQueriesFromData(queryData) {\n    let queryArr = [];\n    for (var i = 0; i < queryData.length; i++) {\n      for (const query of queryData[i].queries) {\n        let queryShortForm = query.path.shortForm;\n        let newQuery = {\n          path: CONF_PATH_PREFIX + query.path.longForm,\n          shortForm: queryShortForm,\n          queryName: queryShortForm.substring(\n            queryShortForm.lastIndexOf(\"/\") + 1\n          ),\n          query: query.data.query,\n          lastReplicationAction: query.lastReplicationAction,\n        };\n        queryArr.push(newQuery);\n      }\n    }\n    return queryArr;\n  }\n\n}\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ActionButton,\n  DialogContainer,\n  Item,\n  Menu,\n  MenuTrigger,\n} from \"@adobe/react-spectrum\";\nimport More from \"@spectrum-icons/workflow/More\";\nimport { copyUrlToClipboard } from \"./Actions/CopyUrl\";\nimport { DeleteQueryDialog } from \"./Actions/DeleteQueryDialog\";\nimport { ACTION_COPY_URL, ACTION_DELETE } from \"project.utils/constants\";\n\n/**\n *\n * To render the menu action items for each persisted query\n */\nexport const PersistedQueryMenu = (props) => {\n  const { query, onDelete = () => void 0 } = props;\n  let [dialog, setDialog] = React.useState();\n\n  // list of avaibale actions for each query element\n  const menuItems = [\n    { action: ACTION_COPY_URL, name: \"Copy URL\" },\n    { action: ACTION_DELETE, name: \"Delete\" },\n  ];\n\n  /**\n   *\n   * @param action the selected action\n   * @param query the object representing a graphql query\n   *\n   * Invoke the appropriate action handler based on the action selected\n   */\n  const handleMenuAction = (action, query) => {\n    if (action === ACTION_COPY_URL) {\n      // call copy-url action handler\n      copyUrlToClipboard(query.shortForm, query.query);\n    } else if (action === ACTION_DELETE) {\n      setDialog(action);\n    }\n  };\n\n  return (\n    <>\n      <MenuTrigger align=\"end\">\n        <ActionButton isQuiet aria-label=\"More Options\">\n          <More />\n        </ActionButton>\n        <Menu\n          items={menuItems}\n          onAction={(key) => {\n            handleMenuAction(key, query);\n          }}\n        >\n          {(menuItem) => (\n            <Item key={menuItem.action} textValue={menuItem.name}>\n              {menuItem.name}\n            </Item>\n          )}\n        </Menu>\n      </MenuTrigger>\n      <DialogContainer onDismiss={() => setDialog(undefined)}>\n        {dialog === ACTION_DELETE && (\n          <DeleteQueryDialog\n            queryName={query.queryName}\n            queryShortForm={query.shortForm}\n            onDelete={onDelete}\n          />\n        )}\n      </DialogContainer>\n    </>\n  );\n};\n\nPersistedQueryMenu.PropTypes = {\n  query: PropTypes.object,\n  onDelete: PropTypes.func,\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GraphiQLComponent } from \"project.components/graphiql/graphiql.component\";\nimport { PersistedQueriesPanel } from \"./PersistedQueries/PersistedQueriesPanel\";\nimport Provider from \"@react/react-spectrum/Provider\";\nimport { Provider as ProviderV3 } from \"@react-spectrum/provider\";\nimport {\n  lightTheme,\n  Heading,\n  IllustratedMessage,\n  Content,\n  Flex\n} from \"@adobe/react-spectrum\";\nimport NotFound from \"@spectrum-icons/illustrations/NotFound\";\nimport { DEFAULT_QUERY } from \"project.utils/constants\";\n\nexport class AppComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: DEFAULT_QUERY,\n      queryName: null,\n      path: null,\n      url: this.props.config.url,\n      // denotes whether the list of persisted queries needs to be reloaded (after delete/save)\n      reloadFlag: false,\n    };\n    this.handleQuerySelection = this.handleQuerySelection.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleUrlChange = this.handleUrlChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n  }\n\n  handleQuerySelection(queryObj) {\n    this.setState({ ...queryObj });\n  }\n\n  handleSave(queryName) {\n    this.setState(prevState => ({\n      queryName: queryName\n    }));\n    this.handleReload();\n  }\n\n  handleDelete() {\n    this.handleReload();\n    this.handleReset();\n  }\n\n  handleReset() {\n    this.setState(prevState => ({\n      queryName: null,\n      query: DEFAULT_QUERY,\n      path: null,\n    }));\n  }\n\n  handleReload() {\n    this.setState(prevState => ({\n      reloadFlag: !prevState.reloadFlag,\n    }));\n  }\n\n  /**\n   *\n   * @param event the endpoint url change event\n   *\n   * Update the component state with new url, so that it is re-rendered.\n   */\n  handleUrlChange(event) {\n    this.setState({\n      url: event.detail\n    });\n    this.handleReset();\n  }\n\n  componentDidMount() {\n    // add listener to endpoint url change event\n    window.addEventListener(\"urlchange\", this.handleUrlChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"urlchange\", this.handleUrlChange);\n  }\n\n  render() {\n    const isPersistedQueriesUIEnabled = this.props.config\n      .isPersistedQueriesUIEnabled;\n    const hasEndpoints = Object.keys(this.props.config.endpoints).length > 0;\n    const createURL = window.Granite.HTTP.externalize(\"/libs/cq/graphql/sites/admin/content/console.html\");\n    return (\n      <Provider toastPlacement=\"bottom center\">\n        <ProviderV3 theme={lightTheme} colorScheme=\"light\">\n          <div className=\"graphiql__app\">\n            {isPersistedQueriesUIEnabled && hasEndpoints && (\n              <PersistedQueriesPanel\n                url={this.state.url}\n                queryName={this.state.queryName}\n                reloadFlag={this.state.reloadFlag}\n                onQuerySelection={this.handleQuerySelection}\n                onDelete={this.handleDelete}\n                onCreate={this.handleReset}\n              />\n                )\n            }\n            { hasEndpoints && (\n              <GraphiQLComponent\n                  url={this.state.url}\n                  path={this.state.path}\n                  onSave={this.handleSave}\n                  onPublish={this.handleReload}\n                  queryName={this.state.queryName}\n                  query={this.state.query}\n                  isPersistedQueriesUIEnabled={isPersistedQueriesUIEnabled}\n              />\n                )\n            }\n            { !hasEndpoints && (\n              <Flex direction=\"column\" width=\"100%\" gap=\"size-100\" alignItems=\"center\">\n                <IllustratedMessage id=\"no-endpoints\">\n                  <NotFound />\n                  <Heading>No endpoints defined</Heading>\n                  <Content>\n                    Try to add an endpoint first <a href={createURL}>here</a>.\n                  </Content>\n                </IllustratedMessage>\n              </Flex>\n                )\n            }\n          </div>\n        </ProviderV3>\n      </Provider>\n    );\n  }\n}\n\nAppComponent.propTypes = {\n  url: PropTypes.string,\n};\n\nexport default AppComponent;\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GraphiQL from \"graphiql\";\nimport SaveComponent from \"project.components/save/save.component\";\nimport History from \"@spectrum-icons/workflow/History\";\nimport Annotate from \"@spectrum-icons/workflow/Annotate\";\nimport PublishComponent from \"project.components/publish/publish.component\";\nimport CachingGraphQLClient from \"../../utils/CachingGraphQLClient\"\n\nimport { ActionButton, Text } from \"@adobe/react-spectrum\";\n\nexport class GraphiQLComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query:null\n    };\n    this.cachingGraphQLClient = new CachingGraphQLClient(this.props.url);\n  }\n  handleEditQuery = (queryString) => {\n    this.setState({\n      query: queryString,\n    });\n  };\n  componentDidUpdate(prevProps) {\n    if (this.props.query !== prevProps.query) {\n      this.setState({\n        query: this.props.query,\n      });\n    }\n  }\n\n  render() {\n    const Logo = () => <span></span>;\n    GraphiQL.Logo = Logo;\n    const isPersistedQueriesUIEnabled = this.props.isPersistedQueriesUIEnabled;\n    return (\n      <div className=\"gq-container\">\n        <GraphiQL\n          ref={(ref) => (this._graphiql = ref)}\n          onEditQuery={\n            isPersistedQueriesUIEnabled ? this.handleEditQuery : undefined\n          }\n          query={isPersistedQueriesUIEnabled ? this.props.query : undefined}\n          style={{ height: \"100vh\" }}\n          defaultVariableEditorOpen={true}\n          fetcher={async (graphQLParams) => {\n            return this.cachingGraphQLClient.query(graphQLParams);\n          }}\n        >\n          <GraphiQL.Toolbar>\n            <div style={{ background: \"linear-gradient(#f7f7f7,#e2e2e2)\" }}>\n              <ActionButton\n                isQuiet\n                onPress={() => this._graphiql.handlePrettifyQuery()}\n                staticColor=\"black\"\n                aria-label=\"Prettify\"\n              >\n                <Annotate />\n                <Text>Prettify</Text>\n              </ActionButton>\n              <ActionButton\n                isQuiet\n                onPress={() => this._graphiql.handleToggleHistory()}\n                staticColor=\"black\"\n                aria-label=\"History\"\n              >\n                <History />\n                <Text>History</Text>\n              </ActionButton>\n              {isPersistedQueriesUIEnabled && this.state.query && (\n                <SaveComponent\n                  endpointURL={this.props.url}\n                  query={this.state.query}\n                  queryName={this.props.queryName}\n                  onSave={this.props.onSave}\n                />\n              )}\n              {isPersistedQueriesUIEnabled && this.props.path && (\n                <PublishComponent path={this.props.path} onPublish={this.props.onPublish}/>\n              )}\n            </div>\n          </GraphiQL.Toolbar>\n        </GraphiQL>\n      </div>\n    );\n  }\n}\n\nGraphiQLComponent.propTypes = {\n  url: PropTypes.string,\n  path: PropTypes.string,\n  query: PropTypes.string,\n  queryName: PropTypes.string,\n  onSave: PropTypes.func,\n  onPublish: PropTypes.func,\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ActionButton,\n  Button,\n  ButtonGroup,\n  Content,\n  Dialog,\n  DialogTrigger,\n  Text,\n  Heading,\n  Divider,\n} from '@adobe/react-spectrum';\nimport Globe from '@spectrum-icons/workflow/Globe';\nimport GlobeStrike from '@spectrum-icons/workflow/GlobeStrike';\nimport {success, error} from \"@react/react-spectrum/Toast\";\nimport { PUBLISH_URL } from \"project.utils/constants\";\n\nexport class PublishComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.publishQuery = this.publishQuery.bind(this);\n    this.unpublishQuery = this.unpublishQuery.bind(this);\n  }\n\n  publishQuery() {\n    this.requestReplication(\"activate\");\n  }\n\n  unpublishQuery() {\n    this.requestReplication(\"deactivate\");\n  }\n  requestReplication(command) {\n    let formData = new FormData();\n    formData.append(\"_charset_\", \"utf-8\");\n    formData.append(\"path\", this.props.path);\n    formData.append(\"cmd\", command);\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", PUBLISH_URL);\n    let text=command===\"activate\"?\"publish\":\"unpublish\";\n    let onPublish = this.props.onPublish\n    xhr.onload = function () {\n      if (xhr.status === 200 || xhr.status === 201) {\n        onPublish();\n        success(\"Selected query scheduled for \"+text+\"ing.\", {\n          timeout: 5000\n        });\n      } else {\n        error(\"Could not \"+text+\" selected query\", {\n          timeout: 5000\n        });\n      }\n    }\n    xhr.send(formData);\n    if(command===\"deactivate\"){\n      this.state.close();\n    }\n  }\n\n  render() {\n    return (<>\n        <ActionButton isQuiet onPress={this.publishQuery} staticColor=\"black\">\n          <Globe/>\n          <Text>Publish</Text>\n        </ActionButton>\n        <DialogTrigger>\n          <ActionButton isQuiet staticColor=\"black\">\n            <GlobeStrike/>\n            <Text>Unpublish</Text>\n          </ActionButton>\n          {(close) => (\n            this.state.close = close,\n              <Dialog>\n                <Heading>Unpublish persisted query</Heading>\n                <Divider/>\n                <Content>\n                  <Text>\n                    Unpublishing might break client applications that rely on the persisted query being present on\n                    publish.\n                    Do you really want to unpublish the selected persisted query?\n                  </Text>\n                </Content>\n                <ButtonGroup>\n                  <Button variant=\"secondary\" onPress={close}>No</Button>\n                  <Button variant=\"cta\" onPress={this.unpublishQuery}>Yes</Button>\n                </ButtonGroup>\n              </Dialog>\n          )}\n        </DialogTrigger>\n      </>\n    );\n  }\n}\n\nPublishComponent.propTypes = {\n  path: PropTypes.string,\n  onPublish: PropTypes.func,\n};\n\nexport default PublishComponent;\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ActionButton,\n  Button,\n  ButtonGroup,\n  Content,\n  Dialog,\n  DialogTrigger,\n  Text,\n  TextField,\n  Form,\n} from '@adobe/react-spectrum';\nimport SaveFloppy from '@spectrum-icons/workflow/SaveFloppy';\nimport {success, error} from \"@react/react-spectrum/Toast\";\nimport {\n  PERSIST_URL,\n} from \"project.utils/constants\";\nimport { PersistedQueryUtil } from \"../PersistedQueries/PersistedQueriesUtil\";\n\nexport class SaveComponent extends Component {\n  constructor(props) {\n    super(props);\n    const queryName = this.props.queryName? this.props.queryName : \"\";\n    const isNewQuery = !this.props.queryName;\n    this.state = {\n      queryName,\n      isNewQuery,\n      inputQueryName: \"\",\n      persistedEnabled: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleTextField = this.handleTextField.bind(this);\n    this.createOrUpdatePersistedQuery = this.createOrUpdatePersistedQuery.bind(this);\n  }\n\n  async componentDidMount() {\n    // to populate the queries on first component load\n    await this.initPersistedEnabled();\n  }\n\n  async initPersistedEnabled() {\n    const availableQueries = await new PersistedQueryUtil(this.props.endpointURL).fetchPersistedQueries();\n    this.setState({\n      persistedEnabled: availableQueries.persistedQueries != null\n    });\n  }\n\n  createOrUpdatePersistedQuery() {\n\n    let operationType,\n      queryName,\n      successMsg\n\n    if(this.state.isNewQuery){\n      operationType = \"PUT\"\n      queryName = this.state.inputQueryName;\n      successMsg = \"Successfully created a persisted query\";\n    } else {\n      operationType = \"POST\"\n      queryName = this.state.queryName;\n      successMsg = \"Successfully updated the persisted query\";\n    }\n    const endpointName = this.props.endpointURL.split('/')[3];\n    const url = PERSIST_URL + '/' + endpointName + '/' + queryName;\n\n    const requestBody = JSON.stringify({ \"query\" : JSON.parse(JSON.stringify(this.props.query))});\n\n    let xhr = new XMLHttpRequest();\n\n    xhr.open(operationType, url);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    let onSave = this.props.onSave\n\n    function errorMessageParser(errorMsg) {\n      if(errorMsg.includes(\"type=ValidationError; \")){\n        return errorMsg.split(\"type=ValidationError; message=\")[1].split(\"@\")[0]\n      }\n      return errorMsg;\n    }\n\n    xhr.onload = function () {\n      if(xhr.status === 200 || xhr.status === 201 ){\n        //success handler\n        success(successMsg, {\n          timeout: 5000\n        });\n        onSave(queryName);\n      } else {\n        //error handler\n        error(errorMessageParser(JSON.stringify(JSON.parse(xhr.responseText).errors[0].details)), {\n          timeout: 5000\n        });\n      }\n    }\n    xhr.send(requestBody);\n    this.setState({\n      inputQueryName: \"\"\n    })\n  }\n\n  handleTextField(inputQueryName){\n    this.setState({\n      inputQueryName\n    });\n  }\n\n  handleFormSubmit(event) {\n    this.createOrUpdatePersistedQuery();\n    this.state.close();\n    event.preventDefault();\n  }\n\n  handleClick() {\n    this.createOrUpdatePersistedQuery();\n    if(this.state.isNewQuery){\n      this.state.close();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.queryName !== prevProps.queryName) {\n      const queryName = this.props.queryName? this.props.queryName : \"\";\n      const isNewQuery = !this.props.queryName;\n      this.setState({\n        queryName,\n        isNewQuery\n      })\n    }\n  }\n\n  render() {\n\n    if (!this.state.persistedEnabled) {\n      return null;\n    }\n\n    if(this.state.isNewQuery){\n      return (\n        <DialogTrigger type=\"popover\" >\n          <ActionButton isQuiet isDisabled={!this.props.query} staticColor=\"black\">\n            <SaveFloppy/>\n            <Text>Save As</Text>\n          </ActionButton>\n          {(close) => (\n            this.state.close = close,\n              <Dialog>\n                <Content>\n                  <Form onSubmit={this.handleFormSubmit}>\n                    <TextField\n                      label=\"Query Name\"\n                      placeholder=\"Type your query name\"\n                      value={this.state.inputQueryName}\n                      onChange={this.handleTextField}/>\n                  </Form>\n                </Content>\n                <ButtonGroup>\n                  <Button variant=\"cta\" onPress={this.handleClick}>save</Button>\n                </ButtonGroup>\n              </Dialog>\n          )}\n        </DialogTrigger>\n      );\n    } else {\n      return (\n        <ActionButton isQuiet isDisabled={!this.props.query} onPress={this.handleClick} staticColor=\"black\">\n          <SaveFloppy/>\n          <Text>Save</Text>\n        </ActionButton>\n      )\n    }\n  }\n}\n\nSaveComponent.propTypes = {\n  endpointURL: PropTypes.string,\n  query: PropTypes.string,\n  queryName: PropTypes.string,\n  onSave:PropTypes.func\n};\n\nexport default SaveComponent;\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nconst TEN_SECONDS = 10000;\n\n/**\n * Caching response for operationName 'IntrospectionQuery' for n seconds (10 seconds),\n * other operations are not cached.\n */\nexport default class CachingGraphQLClient {\n\n  constructor(url) {\n    this.url = url;\n  }\n\n  query(graphQLParams) {\n    const bypassCache = graphQLParams.operationName !== \"IntrospectionQuery\";\n    let data;\n    if (bypassCache || !this.cachedData || Date.now() - this.cachedDataTime > TEN_SECONDS) {\n      data = this._executeQuery(graphQLParams);\n      if (!bypassCache) {\n        console.log(\"setting cache\");\n        this.cachedData = data;\n        this.cachedDataTime = Date.now();\n      }\n    } else {\n      data = this.cachedData;\n    }\n    return data;\n  }\n\n  _executeQuery(graphQLParams) {\n    const xhr = new window.XMLHttpRequest();\n    xhr.open(\"POST\", this.url, false);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    let data;\n    xhr.onload = function () {\n      data = JSON.parse(xhr.response);\n    };\n    xhr.send(JSON.stringify(graphQLParams));\n    return data;\n  }\n\n}","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nexport class ComponentBase {\n  /**\n   * Initialises the component using @nc/dom-components logic.\n   * It sets the name, element, configuration.\n   *\n   * @param {HTMLElement} el - This is the HTML element in the DOM that instantiated the component\n   * @param {object} config - The configuration coming from the data-component-param attribute\n   */\n  constructor(el, config) {\n    this.el = el;\n    this.config = config || {};\n\n    this.init();\n  }\n\n  init() {\n    throw new Error(\n      `Missing 'init()' function for class of type BaseComponent`\n    );\n  }\n}\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nexport const create = (Component, el) => {\n  const params = el.getAttribute(\"data-params\");\n  let options = {};\n\n  try {\n    options = JSON.parse(params);\n  } catch (error) {\n    console.error(`ERROR parsing data-attr`);\n    return error;\n  }\n\n  try {\n    const instance = new Component(el, options);\n    return instance;\n  } catch (error) {\n    console.error(`ERROR:`, el, options, error);\n    return error;\n  }\n};\n","export const GET_PERSISTED_QUERIES_URL = \"/graphql/list.json\";\nexport const EXECUTE_URL = \"/graphql/execute.json\";\nexport const PERSIST_URL = \"/graphql/persist.json\";\nexport const JCR_PATH_SEPARATOR = \"/\";\nexport const DIALOG_PATH_PREFIX = \"/mnt/override/apps/\";\nexport const DIALOG_PATH_SUFFIX = \"/_cq_dialog.html\";\nexport const SHELL_PATH_PREFIX = \"mnt/overlay\";\nexport const APPS_PATH_PREFIX = \"apps\";\nexport const CONF_PATH_PREFIX = \"/conf\";\nexport const DEFAULT_TOAST_TIMEOUT = 5000;\nexport const ACTION_COPY_URL = \"copy-url\";\nexport const ACTION_DELETE = \"delete\";\nexport const PUBLISH_URL = \"/bin/replicate.json\";\nexport const DEFAULT_QUERY = \"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that start\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\";\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/*************************************************************************\\n * ADOBE CONFIDENTIAL\\n * ___________________\\n *\\n * Copyright 2022 Adobe\\n * All Rights Reserved.\\n *\\n * NOTICE: All information contained herein is, and remains\\n * the property of Adobe and its suppliers, if any. The intellectual\\n * and technical concepts contained herein are proprietary to Adobe\\n * and its suppliers and are protected by all applicable intellectual\\n * property laws, including trade secret and copyright laws.\\n * Dissemination of this information or reproduction of this material\\n * is strictly forbidden unless prior written permission is obtained\\n * from Adobe.\\n **************************************************************************/\\n\\n.persisted-queries-list > div > div:first-child {\\n  display: none;\\n}\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/*************************************************************************\\n * ADOBE CONFIDENTIAL\\n * ___________________\\n *\\n * Copyright 2022 Adobe\\n * All Rights Reserved.\\n *\\n * NOTICE: All information contained herein is, and remains\\n * the property of Adobe and its suppliers, if any. The intellectual\\n * and technical concepts contained herein are proprietary to Adobe\\n * and its suppliers and are protected by all applicable intellectual\\n * property laws, including trade secret and copyright laws.\\n * Dissemination of this information or reproduction of this material\\n * is strictly forbidden unless prior written permission is obtained\\n * from Adobe.\\n **************************************************************************/\\n\\n.aem-graphiql__container\\n  .graphiql-root\\n  .graphiql__app\\n  .persisted-queries-panel {\\n  width: 200px;\\n  border-right: 2px solid #e1e1e1;\\n}\\n\\n.aem-graphiql__container\\n  .graphiql-root\\n  .graphiql__app\\n  .persisted-queries-panel\\n  .persisted-queries-list {\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 100%;\\n  position: relative;\\n  min-height: 0;\\n  min-width: 0;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.aem-graphiql__container\\n  .graphiql-root\\n  .graphiql__app\\n  .persisted-queries-panel\\n  .persisted-queries-header {\\n  border-bottom: 1px solid #e1e1e1;\\n  float: left;\\n  width: 90%;\\n  height: 34px;\\n  padding: 7px 12px 6px;\\n  cursor: default;\\n}\\n.persisted-queries-header > div {\\n  float: left;\\n}\\n.persisted-queries-header > div > h4 {\\n  margin-top: 5px;\\n}\\n.persisted-queries-header > button {\\n  float: right;\\n}\\n#no-saved-queries {\\n  padding: 20px;\\n}\\n\", \"\"]);\n\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./PersistedQueriesList.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./PersistedQueriesPanel.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":["GraphiQLApp","ReactDOM","render","AppComponent","this","config","el","ComponentBase","document","addEventListener","$root","querySelector","create","copyUrlToClipboard","queryShortForm","queryBody","variables","extractVariablesFromQuery","url","createCopyUrl","navigator","clipboard","writeText","displaySuccessToast","displayErrorToast","substring","indexOf","split","forEach","param","origin","window","location","protocol","hostname","port","EXECUTE_URL","successMsg","timeout","DEFAULT_TOAST_TIMEOUT","variant","errorMsg","DeleteQueryDialog","props","queryName","onDelete","dialogContainer","useDialogContainer","AlertDialog","title","primaryActionLabel","secondaryActionLabel","onPrimaryAction","PERSIST_URL","xhr","XMLHttpRequest","open","onload","readyState","status","send","dismiss","onSecondaryAction","View","Text","Heading","level","PropTypes","string","func","PersistedQueriesList","queryList","onQuerySelection","TableView","selectionMode","selectionStyle","width","height","overflowMode","selectedKeys","Array","of","onSelectionChange","key","filter","queryObj","currentKey","TableHeader","Column","hideHeader","align","TableBody","items","query","Row","Cell","lastReplicationAction","size","PersistedQueryMenu","propTypes","array","PersistedQueriesPanel","state","configName","persistedQueries","onCreate","element","React","createRef","prevProps","reloadFlag","PersistedQueryUtil","fetchPersistedQueries","data","setState","content","IllustratedMessage","id","ProgressCircle","isIndeterminate","marginTop","length","className","Content","ref","ActionButton","isQuiet","onPress","Flex","direction","gap","alignItems","Component","bool","getConfigNameFromUrl","getPersistedQueries","fetchPersistedQueriesData","queryData","queries","getQueriesFromData","fetch","GET_PERSISTED_QUERIES_URL","JCR_PATH_SEPARATOR","response","ok","message","Error","json","queryArr","i","path","shortForm","newQuery","CONF_PATH_PREFIX","longForm","lastIndexOf","push","useState","dialog","setDialog","menuItems","action","ACTION_COPY_URL","name","ACTION_DELETE","MenuTrigger","Menu","onAction","handleMenuAction","menuItem","Item","textValue","DialogContainer","onDismiss","undefined","object","DEFAULT_QUERY","handleQuerySelection","bind","handleSave","handleUrlChange","handleDelete","handleReset","handleReload","prevState","event","detail","removeEventListener","isPersistedQueriesUIEnabled","hasEndpoints","Object","keys","endpoints","createURL","Granite","HTTP","externalize","toastPlacement","Provider","theme","lightTheme","colorScheme","GraphiQLComponent","onSave","onPublish","href","queryString","cachingGraphQLClient","CachingGraphQLClient","GraphiQL","Logo","_graphiql","onEditQuery","handleEditQuery","style","defaultVariableEditorOpen","fetcher","graphQLParams","Toolbar","background","handlePrettifyQuery","staticColor","handleToggleHistory","endpointURL","PublishComponent","publishQuery","unpublishQuery","requestReplication","command","formData","FormData","append","PUBLISH_URL","text","success","error","close","DialogTrigger","Dialog","Divider","ButtonGroup","Button","SaveComponent","isNewQuery","inputQueryName","persistedEnabled","handleClick","handleFormSubmit","handleTextField","createOrUpdatePersistedQuery","initPersistedEnabled","availableQueries","operationType","endpointName","requestBody","JSON","stringify","parse","setRequestHeader","responseText","errors","details","includes","preventDefault","type","isDisabled","Form","onSubmit","TextField","label","placeholder","value","onChange","bypassCache","operationName","cachedData","Date","now","cachedDataTime","_executeQuery","console","log","init","params","getAttribute","options","module","exports"],"sourceRoot":""}